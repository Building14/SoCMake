"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[233],{7597:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>I,contentTitle:()=>T,default:()=>E,frontMatter:()=>N,metadata:()=>A,toc:()=>w});var a=t(4848),s=t(8453),r=t(6540),i=t(8215),c=t(3104),l=t(6347),o=t(205),d=t(7485),u=t(1682),h=t(9466);function p(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return p(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:s}}=e;return{value:n,label:t,attributes:a,default:s}}))}(t);return function(e){const n=(0,u.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function g(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:t}=e;const a=(0,l.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,d.aZ)(s),(0,r.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(a.location.search);n.set(s,e),a.replace({...a.location,search:n.toString()})}),[s,a])]}function C(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,s=m(e),[i,c]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!g({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:s}))),[l,d]=f({queryString:t,groupId:a}),[u,p]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,s]=(0,h.Dv)(t);return[a,(0,r.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:a}),C=(()=>{const e=l??u;return g({value:e,tabValues:s})?e:null})();(0,o.A)((()=>{C&&c(C)}),[C]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!g({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);c(e),d(e),p(e)}),[d,p,s]),tabValues:s}}var k=t(2303);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:n,block:t,selectedValue:s,selectValue:r,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:d}=(0,c.a_)(),u=e=>{const n=e.currentTarget,t=o.indexOf(n),a=l[t].value;a!==s&&(d(n),r(a))},h=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,a.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,a.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>o.push(e),onKeyDown:h,onClick:u,...r,className:(0,i.A)("tabs__item",x.tabItem,r?.className,{"tabs__item--active":s===n}),children:t??n},n)}))})}function _(e){let{lazy:n,children:t,selectedValue:s}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,a.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function j(e){const n=C(e);return(0,a.jsxs)("div",{className:(0,i.A)("tabs-container",x.tabList),children:[(0,a.jsx)(b,{...e,...n}),(0,a.jsx)(_,{...e,...n})]})}function M(e){const n=(0,k.A)();return(0,a.jsx)(j,{...e,children:p(e.children)},String(n))}const O={tabItem:"tabItem_Ymn6"};function v(e){let{children:n,hidden:t,className:s}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,i.A)(O.tabItem,s),hidden:t,children:n})}const N={sidebar_position:2},T="Getting Started",A={id:"getting_started",title:"Getting Started",description:"The SoCMake source code is available on the following link.",source:"@site/docs/getting_started.mdx",sourceDirName:".",slug:"/getting_started",permalink:"/docs/getting_started",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/getting_started.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"API documentation",permalink:"/docs/api_documentation"},next:{title:"Build System",permalink:"/docs/category/build-system"}},I={},w=[{value:"Dependencies",id:"dependencies",level:2},{value:"Usage",id:"usage",level:2},{value:"deps/deps.cmake",id:"depsdepscmake",level:3},{value:"CMakeLists.txt",id:"cmakeliststxt",level:3},{value:"Directory structure",id:"directory-structure",level:3},{value:"Running CMake",id:"running-cmake",level:3}];function S(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"getting-started",children:"Getting Started"}),"\n",(0,a.jsxs)(n.p,{children:["The SoCMake source code is available on the following ",(0,a.jsx)(n.a,{href:"https://gitlab.cern.ch/socmake/SoCMake",children:"link"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,a.jsxs)(n.p,{children:["Only mandatory SoCMake dependencies are ",(0,a.jsx)(n.code,{children:"CMake>=3.25.0"})," and ",(0,a.jsx)(n.code,{children:"make"}),"."]}),"\n","\n","\n",(0,a.jsxs)(M,{children:[(0,a.jsx)(v,{value:"PIP",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"pip install cmake==3.26.3\n"})})}),(0,a.jsx)(v,{value:"WGET",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"wget https://github.com/Kitware/CMake/releases/download/v3.26.3/cmake-3.26.3-linux-x86_64.sh\nchmod +x cmake-3.26.3-linux-x86_64.sh\n./cmake-3.26.3-linux-x86_64.sh --skip-license --prefix=$(pwd)/cmake\nexport PATH=$(pwd)/cmake/bin:$PATH\n"})})}),(0,a.jsx)(v,{value:"APT",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"apt-get install cmake\n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsxs)(n.p,{children:["Since ",(0,a.jsx)(n.code,{children:"SoCMake"})," runs on CMake scripting language, no installation is required. ",(0,a.jsx)("br",{}),"\nIt is recommended to fetch the SoCMake locally within your ",(0,a.jsx)(n.code,{children:"CMake"})," project. ",(0,a.jsx)("br",{}),"\nThere are multiple ways to add SoCMake within project, 2 of them are with ",(0,a.jsx)(n.code,{children:"CPM"})," or inbuilt ",(0,a.jsx)(n.code,{children:"FetchContent"}),".\nIn both cases SoCMake will be downloaded during configuration phase of the project, only the first time."]}),"\n",(0,a.jsxs)(n.p,{children:["It is recommended to create a file ",(0,a.jsx)(n.code,{children:"deps/deps.cmake"})," with the content from one of the 2 options:"]}),"\n",(0,a.jsx)(n.h3,{id:"depsdepscmake",children:"deps/deps.cmake"}),"\n",(0,a.jsxs)(M,{children:[(0,a.jsxs)(v,{value:"FetchContent",children:[(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cmake",metastring:'title="deps/deps.cmake" showLineNumbers',children:'include(FetchContent)\n\nFetchContent_Declare(SoCMake\n    GIT_REPOSITORY "ssh://git@gitlab.cern.ch:7999/socrates/SoCMake.git"\n    GIT_TAG master # You can define GIT_TAG or GIT_COMMIT for specific versions\n)\n\nFetchContent_MakeAvailable(SoCMake)\n'})}),(0,a.jsx)(n.p,{children:"FetchContent is a built in CMake function for handling dependencies."})]}),(0,a.jsxs)(v,{value:"CPM.cmake",children:[(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cmake",metastring:'title="deps/deps.cmake" showLineNumbers',children:'set(CPM_DOWNLOAD_VERSION 0.38.1)             # Define CPM version to be downloaded\ninclude(${CMAKE_CURRENT_LIST_DIR}/CPM.cmake) # Include the CPM.cmake downloader\n\nCPMAddPackage(              # Add SoCMake as a package\n    NAME SoCMake\n    GIT_TAG master          # You can define GIT_TAG or VERSION for versioning\n    GIT_REPOSITORY "ssh://git@gitlab.cern.ch:7999/socrates/SoCMake.git"  # GIT_REPOSITORY or URL\n    )\n'})}),(0,a.jsx)(n.p,{children:"This is the recomended way of adding SoCMake."}),(0,a.jsxs)(n.p,{children:["In the line 2 we are including ",(0,a.jsx)(n.code,{children:"deps/CPM.cmake"})," installation script, which needs to be placed in the repository."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cmake",metastring:'title="deps/CPM.cmake"',children:'if(CPM_SOURCE_CACHE)\n  set(CPM_DOWNLOAD_LOCATION "${CPM_SOURCE_CACHE}/cpm/CPM_${CPM_DOWNLOAD_VERSION}.cmake")\nelseif(DEFINED ENV{CPM_SOURCE_CACHE})\n  set(CPM_DOWNLOAD_LOCATION "$ENV{CPM_SOURCE_CACHE}/cpm/CPM_${CPM_DOWNLOAD_VERSION}.cmake")\nelse()\n  set(CPM_DOWNLOAD_LOCATION "${CMAKE_BINARY_DIR}/cmake/CPM_${CPM_DOWNLOAD_VERSION}.cmake")\nendif()\n\n# Expand relative path. This is important if the provided path contains a tilde (~)\nget_filename_component(CPM_DOWNLOAD_LOCATION ${CPM_DOWNLOAD_LOCATION} ABSOLUTE)\n\nfunction(download_cpm)\n  message(STATUS "Downloading CPM.cmake to ${CPM_DOWNLOAD_LOCATION}")\n  file(DOWNLOAD\n       https://github.com/cpm-cmake/CPM.cmake/releases/download/v${CPM_DOWNLOAD_VERSION}/CPM.cmake\n       ${CPM_DOWNLOAD_LOCATION}\n  )\nendfunction()\n\nif(NOT (EXISTS ${CPM_DOWNLOAD_LOCATION}))\n  download_cpm()\nelse()\n  # resume download if it previously failed\n  file(READ ${CPM_DOWNLOAD_LOCATION} check)\n  if("${check}" STREQUAL "")\n    download_cpm()\n  endif()\n  unset(check)\nendif()\n\ninclude(${CPM_DOWNLOAD_LOCATION})\n'})})]})]}),"\n",(0,a.jsx)(n.h3,{id:"cmakeliststxt",children:"CMakeLists.txt"}),"\n",(0,a.jsxs)(n.p,{children:["In the main ",(0,a.jsx)(n.code,{children:"CMakeLists.txt"})," include ",(0,a.jsx)(n.code,{children:"deps/deps.cmake"}),".\nIt should look like this:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cmake",children:'cmake_minimum_required(VERSION 3.25)\nproject(example NONE)\n\ninclude("deps/deps.cmake")\n'})}),"\n",(0,a.jsx)(n.p,{children:"After the previous code block, all of the SoCMake functions are available."}),"\n",(0,a.jsx)(n.h3,{id:"directory-structure",children:"Directory structure"}),"\n",(0,a.jsx)(n.p,{children:"The directory tree of the project should look like this"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cmake",children:"\u251c\u2500\u2500 CMakeLists.txt\n\u2514\u2500\u2500 deps\n    \u251c\u2500\u2500 CPM.cmake\n    \u2514\u2500\u2500 deps.cmake\n"})}),"\n",(0,a.jsx)(n.h3,{id:"running-cmake",children:"Running CMake"}),"\n",(0,a.jsxs)(n.p,{children:["Since CMake is endorsing out-of-source builds, meaning that the source files and build artifacts are in separate directories.\nWe are creating a ",(0,a.jsx)(n.code,{children:"build"})," directory."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"mkdir build\ncd build\ncmake ../\n"})}),"\n",(0,a.jsx)(n.p,{children:"After executing CMake we should ge the following messages:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"-- Downloading CPM.cmake to .../build/cmake/CPM_0.38.1.cmake\n-- CPM: Adding package SoCMake@ (master)\n-- Configuring done\n-- Generating done\n-- Build files have been written to: .../build\n"})}),"\n",(0,a.jsxs)(n.p,{children:["By default the packages will be downloaded in ",(0,a.jsx)(n.code,{children:"${CMAKE_BINARY_DIR}/_deps/"}),".\nThis is possible to change by setting ",(0,a.jsx)(n.a,{href:"https://cmake.org/cmake/help/latest/module/FetchContent.html#variable:FETCHCONTENT_BASE_DIR",children:(0,a.jsx)(n.code,{children:"FETCHCONTENT_BASE_DIR"})})," before the first ",(0,a.jsx)(n.code,{children:"CPMAddPackage"})," command."]}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["For larger projects it is recommended to set ",(0,a.jsx)(n.code,{children:"set(FETCHCONTENT_BASE_DIR ${CMAKE_CURRENT_LIST_DIR}/_deps)"})," in ",(0,a.jsx)(n.code,{children:"deps/deps.cmake"}),", this will download all the dependencies git repository wide, so they will be available from different subdirectories like ",(0,a.jsx)(n.code,{children:"verification"}),", ",(0,a.jsx)(n.code,{children:"documentation"})," etc..."]})}),"\n",(0,a.jsx)(n.p,{children:"The previous example only set up the project, but we didnt add any design files or added any targets.\nJump to the Examples page next."})]})}function E(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(S,{...e})}):S(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var a=t(6540);const s={},r=a.createContext(s);function i(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);