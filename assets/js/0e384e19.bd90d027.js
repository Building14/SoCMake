"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[976],{1512:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>a});var t=s(4848),r=s(8453);const i={sidebar_position:1},o="Introduction",d={id:"intro",title:"Introduction",description:"<img",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"API documentation",permalink:"/docs/api_documentation"}},c={},a=[];function l(e){const n={a:"a",code:"code",h1:"h1",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsx)("div",{style:{textAlign:"center"},children:(0,t.jsx)("img",{src:s(2312).A,width:"70%",className:"center"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"SoCMake"})," is a hardware build system based on CMake.\nSoCMake can help you automatize yout build process for hardware designs, either running simulation, code generation, FPGA implementation, synthesis etc..."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"SoCMake"})," project does not try to create a new build system, instead it is an extension of ",(0,t.jsx)(n.code,{children:"CMake"})," build system generator.\nSince ",(0,t.jsx)(n.code,{children:"CMake"})," is a mature and widely used build system, it can easily cover the requirements needed for hardware design."]}),"\n",(0,t.jsx)(n.h1,{id:"key-features",children:"Key Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:["Native Support for ",(0,t.jsx)(n.code,{children:"C++"})," and ",(0,t.jsx)(n.code,{children:"C"})," testbenches:"]})," ",(0,t.jsx)("br",{}),"\nThis makes ",(0,t.jsx)(n.code,{children:"SoCMake"})," a natural choice of build system for ",(0,t.jsx)(n.code,{children:"C++"})," and ",(0,t.jsx)(n.code,{children:"SystemC"})," testbenches.\nHowever it can be also used for ",(0,t.jsx)(n.code,{children:"Verilog"}),", ",(0,t.jsx)(n.code,{children:"SV"})," or ",(0,t.jsx)(n.code,{children:"VHDL"})," only testbenches."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Cross compilation of target CPU application code:"})," ",(0,t.jsx)("br",{}),"\nCMake's support for cross-compilation makes ",(0,t.jsx)(n.code,{children:"SoCMake"})," a natural choice for System on Chips design, where a test application needs to be cross compiled for the target CPU."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"CMake maturity and familiar flow:"}),"\nSince CMake is used as a base build system, ",(0,t.jsx)(n.code,{children:"SoCMake"})," benefits from the stability and the documentation of the project. Configuring the project and running Make targets is also familiar to most ",(0,t.jsx)(n.code,{children:"Linux"})," users."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"IP block packaging and management:"}),"\n",(0,t.jsx)(n.code,{children:"SoCMake"})," provides a way to package IP blocks into independent and self contained ",(0,t.jsx)(n.code,{children:"git"})," repositories. Which can later be fetched with ",(0,t.jsx)(n.a,{href:"https://github.com/cpm-cmake/CPM.cmake",children:"CPM.cmake"})," package manager."]}),"\n"]}),"\n",(0,t.jsx)(n.h1,{id:"supported-languages-and-tools",children:"Supported Languages and Tools"}),"\n",(0,t.jsxs)(n.p,{children:["Currently ",(0,t.jsx)(n.code,{children:"SoCMake"})," supports a number of EDA tools that were used within the SoC project the tool was originaly deveoped for.\nThe list is always growing and soon many more tools will be added."]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Supported"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Languages"})}),(0,t.jsx)(n.td,{children:"C, C++, ASM, Verilog, SystemVerilog, VHDL, SystemRDL"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"RTL Simulation"})}),(0,t.jsx)(n.td,{children:"Verilator, Icarus, GHDL, Xcelium, VCS"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"RTL Linting"})}),(0,t.jsx)(n.td,{children:"Verible"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"RTL conversion"})}),(0,t.jsx)(n.td,{children:"SV2V, tmrg, tmrv"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Synthesis"})}),(0,t.jsx)(n.td,{children:"Yosys, Vivado"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"PeakRDL"})}),(0,t.jsx)(n.td,{children:"regblock, halcpp, html, docusaurus, ipblocksvg, socgen, ldsgen"})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},2312:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/SoCMakeLogo-0694a0ed53b29d2716fb8ea5a1ffabba.png"},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>d});var t=s(6540);const r={},i=t.createContext(r);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);